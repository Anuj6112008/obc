# Obfuscated by the Botpalys encoder
#Time: Sat Sep 20 20:09:40 2025
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))